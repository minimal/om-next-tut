;; Analyzed by ClojureScript 1.7.122
{:use-macros {async cljs.test, is cljs.test, defui om.next, deftest devcards.core, dom-node devcards.core, defcard devcards.core, defcard-doc devcards.core}, :excludes #{}, :name om-next-tut.core, :imports nil, :requires {goog.dom goog.dom, om-next-tut.animals om-next-tut.animals, dom om.dom, om.dom om.dom, cljs.test cljs.test, sablono.core sablono.core, gdom goog.dom, sab sablono.core, om om.next, om.next om.next}, :uses nil, :defs {mutate {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/core.cljs", :line 89, :column 7, :end-line 89, :end-column 13, :arglists (quote ([{:keys [state], :as env} key params]))}, :name om-next-tut.core/mutate, :variadic false, :file "src/om_next_tut/core.cljs", :end-column 13, :method-params ([p__51991 key params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [state], :as env} key params]))}, app-state2 {:name om-next-tut.core/app-state2, :file "src/om_next_tut/core.cljs", :line 81, :column 1, :end-line 81, :end-column 20, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/core.cljs", :line 81, :column 10, :end-line 81, :end-column 20}}, read {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/core.cljs", :line 83, :column 7, :end-line 83, :end-column 11, :arglists (quote ([{:keys [state], :as env} key params]))}, :name om-next-tut.core/read, :variadic false, :file "src/om_next_tut/core.cljs", :end-column 11, :method-params ([p__51984 key params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [state], :as env} key params]))}, reconciler {:name om-next-tut.core/reconciler, :file "src/om_next_tut/core.cljs", :line 60, :column 1, :end-line 60, :end-column 16, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/core.cljs", :line 60, :column 6, :end-line 60, :end-column 16}}, reconciler2 {:name om-next-tut.core/reconciler2, :file "src/om_next_tut/core.cljs", :line 108, :column 1, :end-line 108, :end-column 17, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/core.cljs", :line 108, :column 6, :end-line 108, :end-column 17}}, HelloWorld {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/core.cljs", :line 14, :column 8, :end-line 14, :end-column 18, :arglists (quote ([]))}, :name om-next-tut.core/HelloWorld, :variadic false, :file "src/om_next_tut/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, hello {:name om-next-tut.core/hello, :file "src/om_next_tut/core.cljs", :line 21, :column 1, :end-line 21, :end-column 11, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/core.cljs", :line 21, :column 6, :end-line 21, :end-column 11}}, counter {:name om-next-tut.core/counter, :file "src/om_next_tut/core.cljs", :line 59, :column 1, :end-line 59, :end-column 13, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/core.cljs", :line 59, :column 6, :end-line 59, :end-column 13}}, app-state {:name om-next-tut.core/app-state, :file "src/om_next_tut/core.cljs", :line 47, :column 1, :end-line 47, :end-column 19, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/core.cljs", :line 47, :column 10, :end-line 47, :end-column 19}}, Counter2 {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/core.cljs", :line 95, :column 8, :end-line 95, :end-column 16, :arglists (quote ([]))}, :name om-next-tut.core/Counter2, :variadic false, :file "src/om_next_tut/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, Counter {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/core.cljs", :line 49, :column 8, :end-line 49, :end-column 15, :arglists (quote ([]))}, :name om-next-tut.core/Counter, :variadic false, :file "src/om_next_tut/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {dc devcards.core, devcards.core devcards.core, om om.next, om.next om.next, cljs.test cljs.test, sab sablono.core, sablono.core sablono.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:path :countercard2 :read :om.next/queries :inspect-data :config :func :name :value increment :state :documentation :card :om_next_tut.core :parser :main-obj :simple-component :not-found :initial-data :countercard :indexer :count :action :options :mutate :heading :text :hide-border}, :order [:config :state :indexer :om.next/queries :text :path :func :om_next_tut.core :card :name :documentation :main-obj :initial-data :options :heading :hide-border :simple-component :count :countercard :inspect-data :value :not-found increment :action :parser :read :mutate :countercard2]}, :doc nil}