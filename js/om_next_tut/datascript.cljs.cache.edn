;; Analyzed by ClojureScript 1.7.122
{:use-macros {async cljs.test, is cljs.test, defui om.next, deftest devcards.core, dom-node devcards.core, defcard devcards.core, defcard-doc devcards.core}, :excludes #{}, :name om-next-tut.datascript, :imports nil, :requires {goog.dom goog.dom, dom om.dom, om.dom om.dom, cljs.test cljs.test, datascript.core datascript.core, sablono.core sablono.core, gdom goog.dom, sab sablono.core, om om.next, om.next om.next, d datascript.core}, :uses nil, :defs {conn {:name om-next-tut.datascript/conn, :file "src/om_next_tut/datascript.cljs", :line 13, :column 1, :end-line 13, :end-column 10, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/datascript.cljs", :line 13, :column 6, :end-line 13, :end-column 10}}, m {:name om-next-tut.datascript/m, :file "src/om_next_tut/datascript.cljs", :line 15, :column 1, :end-line 15, :end-column 7, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/datascript.cljs", :line 15, :column 6, :end-line 15, :end-column 7}}, read {:name om-next-tut.datascript/read, :file "src/om_next_tut/datascript.cljs", :line 22, :column 5, :end-line 22, :end-column 19, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/datascript.cljs", :line 22, :column 15, :end-line 22, :end-column 19}}, mutate {:name om-next-tut.datascript/mutate, :file "src/om_next_tut/datascript.cljs", :line 31, :column 5, :end-line 31, :end-column 21, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/datascript.cljs", :line 31, :column 15, :end-line 31, :end-column 21}}, Counter {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/datascript.cljs", :line 40, :column 8, :end-line 40, :end-column 15, :arglists (quote ([]))}, :name om-next-tut.datascript/Counter, :variadic false, :file "src/om_next_tut/datascript.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, reconciler {:name om-next-tut.datascript/reconciler, :file "src/om_next_tut/datascript.cljs", :line 58, :column 1, :end-line 58, :end-column 16, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/src/om_next_tut/datascript.cljs", :line 58, :column 6, :end-line 58, :end-column 16}}}, :require-macros {dc devcards.core, devcards.core devcards.core, om om.next, om.next om.next, cljs.test cljs.test, sab sablono.core, sablono.core sablono.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:path :find :selector pull :datascript-card ?selector :where :read :om.next/queries :config :default :func app/increment :name :value :state :documentation :card :app/title :parser :main-obj :app/counter $ :initial-data :indexer :app/count :db/id :om_next_tut.datascript :action :options :hierarchy ... ?e :mutate :heading :in :hide-border}, :order [:db/id :app/title :app/count :hierarchy :default :app/counter :state :selector :value :find pull ?e ?selector ... :in $ :where app/increment :action :config :indexer :om.next/queries :parser :read :mutate :path :func :om_next_tut.datascript :card :name :documentation :main-obj :initial-data :options :heading :hide-border :datascript-card]}, :doc nil}