;; Analyzed by ClojureScript 1.7.122
{:name om.next.protocols, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {indexes {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 4, :column 4, :end-line 4, :end-column 11, :protocol om.next.protocols/IIndexer, :doc nil, :arglists (quote ([this]))}, :protocol om.next.protocols/IIndexer, :name om.next.protocols/indexes, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, schedule-send! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 16, :column 4, :end-line 16, :end-column 18, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([reconciler]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/schedule-send!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 18, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc nil}, queue! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 17, :column 4, :end-line 17, :end-column 10, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([reconciler ks]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/queue!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 10, :method-params ([reconciler ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler ks])), :doc nil}, send! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 20, :column 4, :end-line 20, :end-column 9, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([reconciler]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/send!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 9, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc nil}, drop-component! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 7, :column 4, :end-line 7, :end-column 19, :protocol om.next.protocols/IIndexer, :doc nil, :arglists (quote ([this component]))}, :protocol om.next.protocols/IIndexer, :name om.next.protocols/drop-component!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 19, :method-params ([this component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this component])), :doc nil}, IIndexer {:meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 3, :column 14, :end-line 3, :end-column 22, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {indexes [[this]], index-root [[this root-class]], index-component! [[this component]], drop-component! [[this component]], ref-for [[this component]], key->components [[this k]]}}}, :protocol-symbol true, :name om.next.protocols/IIndexer, :file "resources/public/js/om/next/protocols.cljs", :end-column 22, :column 1, :line 3, :protocol-info {:methods {indexes [[this]], index-root [[this root-class]], index-component! [[this component]], drop-component! [[this component]], ref-for [[this component]], key->components [[this k]]}}, :info nil, :end-line 3, :impls #{}, :doc nil, :jsdoc ("@interface")}, index-component! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 6, :column 4, :end-line 6, :end-column 20, :protocol om.next.protocols/IIndexer, :doc nil, :arglists (quote ([this component]))}, :protocol om.next.protocols/IIndexer, :name om.next.protocols/index-component!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 20, :method-params ([this component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this component])), :doc nil}, reconcile! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 19, :column 4, :end-line 19, :end-column 14, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([reconciler]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/reconcile!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 14, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc nil}, schedule-render! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 15, :column 4, :end-line 15, :end-column 20, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([reconciler]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/schedule-render!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 20, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc nil}, IReconciler {:meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 11, :column 14, :end-line 11, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {schedule-send! [[reconciler]], queue! [[reconciler ks]], send! [[reconciler]], reconcile! [[reconciler]], schedule-render! [[reconciler]], basis-t [[this]], add-root! [[reconciler root-class target options]], remove-root! [[reconciler target]], queue-send! [[reconciler expr]]}}}, :protocol-symbol true, :name om.next.protocols/IReconciler, :file "resources/public/js/om/next/protocols.cljs", :end-column 25, :column 1, :line 11, :protocol-info {:methods {schedule-send! [[reconciler]], queue! [[reconciler ks]], send! [[reconciler]], reconcile! [[reconciler]], schedule-render! [[reconciler]], basis-t [[this]], add-root! [[reconciler root-class target options]], remove-root! [[reconciler target]], queue-send! [[reconciler expr]]}}, :info nil, :end-line 11, :impls #{}, :doc nil, :jsdoc ("@interface")}, basis-t {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 12, :column 4, :end-line 12, :end-column 11, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([this]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/basis-t, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, key->components {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 9, :column 4, :end-line 9, :end-column 19, :protocol om.next.protocols/IIndexer, :doc nil, :arglists (quote ([this k]))}, :protocol om.next.protocols/IIndexer, :name om.next.protocols/key->components, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 19, :method-params ([this k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this k])), :doc nil}, add-root! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 13, :column 4, :end-line 13, :end-column 13, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([reconciler root-class target options]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/add-root!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 13, :method-params ([reconciler root-class target options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 13, :max-fixed-arity 4, :fn-var true, :arglists (quote ([reconciler root-class target options])), :doc nil}, index-root {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 5, :column 4, :end-line 5, :end-column 14, :protocol om.next.protocols/IIndexer, :doc nil, :arglists (quote ([this root-class]))}, :protocol om.next.protocols/IIndexer, :name om.next.protocols/index-root, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 14, :method-params ([this root-class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this root-class])), :doc nil}, ref-for {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 8, :column 4, :end-line 8, :end-column 11, :protocol om.next.protocols/IIndexer, :doc nil, :arglists (quote ([this component]))}, :protocol om.next.protocols/IIndexer, :name om.next.protocols/ref-for, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 11, :method-params ([this component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this component])), :doc nil}, remove-root! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 14, :column 4, :end-line 14, :end-column 16, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([reconciler target]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/remove-root!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 16, :method-params ([reconciler target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler target])), :doc nil}, queue-send! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next/protocols.cljs", :line 18, :column 4, :end-line 18, :end-column 15, :protocol om.next.protocols/IReconciler, :doc nil, :arglists (quote ([reconciler expr]))}, :protocol om.next.protocols/IReconciler, :name om.next.protocols/queue-send!, :variadic false, :file "resources/public/js/om/next/protocols.cljs", :end-column 15, :method-params ([reconciler expr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler expr])), :doc nil}}}