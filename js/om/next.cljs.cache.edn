;; Analyzed by ClojureScript 1.7.122
{:use-macros {defui om.next}, :excludes #{var? key replace}, :name om.next, :imports {Console goog.debug.Console}, :requires {goog.dom goog.dom, glog goog.log, gstring goog.string, om.next.cache om.next.cache, clojure.zip clojure.zip, p om.next.protocols, om.next.impl.parser om.next.impl.parser, goog.string goog.string, gobj goog.object, goog.object goog.object, walk clojure.walk, goog.log goog.log, om.next.impl.refs om.next.impl.refs, refs om.next.impl.refs, om.next.protocols om.next.protocols, gdom goog.dom, c om.next.cache, parser om.next.impl.parser, zip clojure.zip, clojure.walk clojure.walk, Console goog.debug.Console}, :uses nil, :defs {t {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 221, :column 8, :end-line 221, :end-column 9, :private true, :arglists (quote ([c])), :doc "Get basis t value for when the component last read its props from\n   the global state."}, :private true, :name om.next/t, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 9, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :doc "Get basis t value for when the component last read its props from\n   the global state."}, query {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 119, :column 4, :end-line 119, :end-column 9, :protocol om.next/IQuery, :doc "Return the component's unbound query", :arglists (quote ([this]))}, :protocol om.next/IQuery, :name om.next/query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the component's unbound query"}, query-template {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 59, :column 8, :end-line 59, :end-column 22, :private true, :arglists (quote ([query path]))}, :private true, :name om.next/query-template, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([query path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query path]))}, schedule-send! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 519, :column 7, :end-line 519, :end-column 21, :arglists (quote ([reconciler]))}, :name om.next/schedule-send!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 21, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 519, :end-line 519, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, get-prop {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 206, :column 8, :end-line 206, :end-column 16, :private true, :arglists (quote ([c k])), :doc "PRIVATE: Do not use"}, :private true, :name om.next/get-prop, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([c k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c k])), :doc "PRIVATE: Do not use"}, focused? {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 462, :column 8, :end-line 462, :end-column 16, :private true, :arglists (quote ([x]))}, :private true, :name om.next/focused?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 462, :end-line 462, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, class-path->query {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 774, :column 7, :end-line 774, :end-column 24, :arglists (quote ([x y]))}, :name om.next/class-path->query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 24, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 774, :end-line 774, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, ITxIntercept {:meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 559, :column 14, :end-line 559, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {tx-intercept [[c tx]]}}}, :protocol-symbol true, :name om.next/ITxIntercept, :file "resources/public/js/om/next.cljs", :end-column 26, :column 1, :line 559, :protocol-info {:methods {tx-intercept [[c tx]]}}, :info nil, :end-line 559, :impls #{}, :doc nil, :jsdoc ("@interface")}, Ident {:meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 104, :column 14, :end-line 104, :end-column 19, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {ident [[this]]}}}, :protocol-symbol true, :name om.next/Ident, :file "resources/public/js/om/next.cljs", :end-column 19, :column 1, :line 104, :protocol-info {:methods {ident [[this]]}}, :info nil, :end-line 104, :impls #{default}, :doc nil, :jsdoc ("@interface")}, get-rendered-state {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 337, :column 7, :end-line 337, :end-column 25, :arglists (quote ([component])), :doc "Get the rendered state of component. om.next/get-state always returns the\n   up-to-date state."}, :name om.next/get-rendered-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 337, :end-line 337, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Get the rendered state of component. om.next/get-state always returns the\n   up-to-date state."}, react-type {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 253, :column 7, :end-line 253, :end-column 17, :arglists (quote ([x])), :doc "Returns the component type, regardless of whether the component has been\n   mounted"}, :name om.next/react-type, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 253, :end-line 253, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns the component type, regardless of whether the component has been\n   mounted"}, merge! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 852, :column 7, :end-line 852, :end-column 13, :arglists (quote ([reconciler delta])), :doc "Merge a state delta into the application state. Affected components managed\n   by the reconciler will re-render."}, :name om.next/merge!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([reconciler delta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 852, :end-line 852, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler delta])), :doc "Merge a state delta into the application state. Affected components managed\n   by the reconciler will re-render."}, *root-class* {:name om.next/*root-class*, :file "resources/public/js/om/next.cljs", :line 27, :column 1, :end-line 27, :end-column 49, :dynamic true, :private true, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 27, :column 37, :end-line 27, :end-column 49, :dynamic true, :private true}}, set-query! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 365, :column 7, :end-line 365, :end-column 17, :arglists (quote ([component new-query])), :doc "Change the query of a component. Will schedule a re-render."}, :name om.next/set-query!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([component new-query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 365, :end-line 365, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component new-query])), :doc "Change the query of a component. Will schedule a re-render."}, ref->any {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 762, :column 7, :end-line 762, :end-column 15, :arglists (quote ([x ref])), :doc "Get any component from the indexer that matches the ref."}, :name om.next/ref->any, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([x ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 762, :end-line 762, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ref])), :doc "Get any component from the indexer that matches the ref."}, get-component-query {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 143, :column 7, :end-line 143, :end-column 26, :arglists (quote ([c]))}, :name om.next/get-component-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 26, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, props {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 277, :column 7, :end-line 277, :end-column 12, :arglists (quote ([component])), :doc "Return a components props."}, :name om.next/props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 12, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 277, :end-line 277, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return a components props."}, update-component! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 424, :column 8, :end-line 424, :end-column 25, :private true, :arglists (quote ([c next-props]))}, :private true, :name om.next/update-component!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([c next-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 424, :end-line 424, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c next-props]))}, subpath {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 796, :column 7, :end-line 796, :end-column 14, :arglists (quote ([path key])), :doc "Given a key path into the application state return the path after the\n   given key"}, :name om.next/subpath, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([path key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 796, :end-line 796, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path key])), :doc "Given a key path into the application state return the path after the\n   given key"}, tx-intercept {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 560, :column 4, :end-line 560, :end-column 16, :protocol om.next/ITxIntercept, :doc "An optional protocol that component may implement to intercept child\n     transactions.", :arglists (quote ([c tx]))}, :protocol om.next/ITxIntercept, :name om.next/tx-intercept, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([c tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 559, :end-line 560, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c tx])), :doc "An optional protocol that component may implement to intercept child\n     transactions."}, indexer? {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 740, :column 16, :end-line 740, :end-column 24, :tag boolean, :arglists (quote ([x])), :doc "Returns true if x is an indexer."}, :name om.next/indexer?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 740, :ret-tag boolean, :end-line 740, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if x is an indexer."}, children {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 419, :column 7, :end-line 419, :end-column 15, :arglists (quote ([component])), :doc "Returns the component's children."}, :name om.next/children, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 419, :end-line 419, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the component's children."}, default-merge-ref {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 961, :column 8, :end-line 961, :end-column 25, :private true, :arglists (quote ([{:keys [indexer], :as config} tree ref props]))}, :private true, :name om.next/default-merge-ref, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([p__63339 tree ref props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 961, :end-line 961, :max-fixed-arity 4, :fn-var true, :arglists (quote ([{:keys [indexer], :as config} tree ref props]))}, -set-state! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 122, :column 4, :end-line 122, :end-column 15, :protocol om.next/ILocalState, :doc "Set the component's local state", :arglists (quote ([this new-state]))}, :protocol om.next/ILocalState, :name om.next/-set-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([this new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 122, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this new-state])), :doc "Set the component's local state"}, iquery? {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 163, :column 7, :end-line 163, :end-column 14, :arglists (quote ([x]))}, :name om.next/iquery?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, var->keyword {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 131, :column 8, :end-line 131, :end-column 20, :private true, :arglists (quote ([x]))}, :private true, :name om.next/var->keyword, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, update-props! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 272, :column 8, :end-line 272, :end-column 21, :private true, :arglists (quote ([c next-props]))}, :private true, :name om.next/update-props!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 21, :method-params ([c next-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 272, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c next-props]))}, should-update? {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 429, :column 7, :end-line 429, :end-column 21, :arglists (quote ([c next-props] [c next-props next-state])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c next-props] [c next-props next-state]), :arglists ([c next-props] [c next-props next-state]), :arglists-meta (nil nil)}}, :name om.next/should-update?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c next-props] [c next-props next-state]), :arglists ([c next-props] [c next-props next-state]), :arglists-meta (nil nil)}, :method-params ([c next-props] [c next-props next-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 429, :end-line 429, :max-fixed-arity 3, :fn-var true, :arglists ([c next-props] [c next-props next-state])}, to-resolveable {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 812, :column 8, :end-line 812, :end-column 22, :private true, :arglists (quote ([x])), :doc "Given a component return the nearest parent (including the component itself)\n   for which there is a known data path."}, :private true, :name om.next/to-resolveable, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 812, :end-line 812, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Given a component return the nearest parent (including the component itself)\n   for which there is a known data path."}, build-index {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 745, :column 8, :end-line 745, :end-column 19, :private true, :arglists (quote ([class]))}, :private true, :name om.next/build-index, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 745, :end-line 745, :max-fixed-arity 1, :fn-var true, :arglists (quote ([class]))}, instrument {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 268, :column 7, :end-line 268, :end-column 17, :arglists (quote ([component]))}, :name om.next/instrument, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 268, :end-line 268, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, var? {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 127, :column 8, :end-line 127, :end-column 12, :private true, :arglists (quote ([x]))}, :private true, :name om.next/var?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, map->Reconciler {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 859, :column 12, :end-line 859, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__63256]))}, :name om.next/map->Reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([G__63256]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 859, :end-line 859, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__63256]))}, react-key {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 248, :column 7, :end-line 248, :end-column 16, :arglists (quote ([component])), :doc "Returns the components React key."}, :name om.next/react-key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 248, :end-line 248, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the components React key."}, set-state! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 295, :column 7, :end-line 295, :end-column 17, :arglists (quote ([component new-state])), :doc "Set the component local state of the component. Analogous to React's\n   setState."}, :name om.next/set-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([component new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 295, :end-line 295, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component new-state])), :doc "Set the component local state of the component. Analogous to React's\n   setState."}, from-history {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 1013, :column 7, :end-line 1013, :end-column 19, :arglists (quote ([reconciler uuid]))}, :name om.next/from-history, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([reconciler uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1013, :end-line 1013, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler uuid]))}, default-ui->props {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 951, :column 8, :end-line 951, :end-column 25, :private true, :arglists (quote ([{:keys [state indexer parser], :as env} c]))}, :private true, :name om.next/default-ui->props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([p__63330 c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 951, :end-line 951, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [state indexer parser], :as env} c]))}, data-path {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 447, :column 8, :end-line 447, :end-column 17, :private true, :arglists (quote ([c] [c f])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([c] [c f]), :arglists ([c] [c f]), :arglists-meta (nil nil)}}, :private true, :name om.next/data-path, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([c] [c f]), :arglists ([c] [c f]), :arglists-meta (nil nil)}, :method-params ([c] [c f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 447, :end-line 447, :max-fixed-arity 2, :fn-var true, :arglists ([c] [c f])}, to-env {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 564, :column 8, :end-line 564, :end-column 14, :private true, :arglists (quote ([x]))}, :private true, :name om.next/to-env, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 564, :end-line 564, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, parent {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 237, :column 8, :end-line 237, :end-column 14, :private true, :arglists (quote ([component])), :doc "Returns the parent Om component."}, :private true, :name om.next/parent, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 237, :end-line 237, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the parent Om component."}, index {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 259, :column 8, :end-line 259, :end-column 13, :private true, :arglists (quote ([c])), :doc "Returns the component's Om index."}, :private true, :name om.next/index, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 259, :end-line 259, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :doc "Returns the component's Om index."}, merge-refs {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 838, :column 8, :end-line 838, :end-column 18, :private true, :arglists (quote ([tree {:keys [merge-ref], :as config} refs]))}, :private true, :name om.next/merge-refs, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([tree p__63231 refs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 838, :end-line 838, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tree {:keys [merge-ref], :as config} refs]))}, call {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 619, :column 7, :end-line 619, :end-column 11, :arglists (quote ([component name] [component name param-map] [component name param-map reads])), :doc "Given a component a symbol identifying a mutation run a transaction. May\n   supply a parse expression of reads that will be used to trigger re-renders\n   that depend on the provided keys. Does not return a meaningful value.\n\n   Example:\n\n     (om/call widget 'do/it! [:changed/key])", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([component name] [component name param-map] [component name param-map reads]), :arglists ([component name] [component name param-map] [component name param-map reads]), :arglists-meta (nil nil nil)}}, :name om.next/call, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([component name] [component name param-map] [component name param-map reads]), :arglists ([component name] [component name param-map] [component name param-map reads]), :arglists-meta (nil nil nil)}, :method-params ([component name] [component name param-map] [component name param-map reads]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 619, :end-line 619, :max-fixed-arity 4, :fn-var true, :arglists ([component name] [component name param-map] [component name param-map reads]), :doc "Given a component a symbol identifying a mutation run a transaction. May\n   supply a parse expression of reads that will be used to trigger re-renders\n   that depend on the provided keys. Does not return a meaningful value.\n\n   Example:\n\n     (om/call widget 'do/it! [:changed/key])"}, replace {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 75, :column 8, :end-line 75, :end-column 15, :private true, :arglists (quote ([template new-query]))}, :private true, :name om.next/replace, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([template new-query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 2, :fn-var true, :arglists (quote ([template new-query]))}, ->Indexer {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 658, :column 12, :end-line 658, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([indexes]))}, :name om.next/->Indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([indexes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 658, :end-line 658, :max-fixed-arity 1, :fn-var true, :arglists (quote ([indexes]))}, node->key {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 39, :column 8, :end-line 39, :end-column 17, :private true, :arglists (quote ([node]))}, :private true, :name om.next/node->key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, ref {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 547, :column 7, :end-line 547, :end-column 10, :arglists (quote ([root id & more])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(root id more)], :arglists ([root id & more]), :arglists-meta (nil)}}, :name om.next/ref, :variadic true, :file "resources/public/js/om/next.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(root id more)], :arglists ([root id & more]), :arglists-meta (nil)}, :method-params [(root id more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 547, :end-line 547, :max-fixed-arity 2, :fn-var true, :arglists ([root id & more])}, class->any {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 768, :column 7, :end-line 768, :end-column 17, :arglists (quote ([x class])), :doc "Get any component from the indexer that matches the component class."}, :name om.next/class->any, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([x class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 768, :end-line 768, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x class])), :doc "Get any component from the indexer that matches the component class."}, mounted? {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 401, :column 7, :end-line 401, :end-column 15, :arglists (quote ([component])), :doc "Returns true if the component is mounted."}, :name om.next/mounted?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 401, :end-line 401, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns true if the component is mounted."}, focus-query {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 78, :column 8, :end-line 78, :end-column 19, :private true, :arglists (quote ([query path]))}, :private true, :name om.next/focus-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([query path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query path]))}, -merge-pending-state! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 125, :column 4, :end-line 125, :end-column 25, :protocol om.next/ILocalState, :doc "Get the component's pending local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-merge-pending-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's pending local state"}, refs {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 553, :column 7, :end-line 553, :end-column 11, :arglists (quote ([root & ids])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(root ids)], :arglists ([root & ids]), :arglists-meta (nil)}}, :name om.next/refs, :variadic true, :file "resources/public/js/om/next.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(root ids)], :arglists ([root & ids]), :arglists-meta (nil)}, :method-params [(root ids)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 553, :end-line 553, :max-fixed-arity 1, :fn-var true, :arglists ([root & ids])}, *reconciler* {:name om.next/*reconciler*, :file "resources/public/js/om/next.cljs", :line 26, :column 1, :end-line 26, :end-column 49, :dynamic true, :private true, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 26, :column 37, :end-line 26, :end-column 49, :dynamic true, :private true}}, merge-novelty! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 843, :column 8, :end-line 843, :end-column 22, :private true, :arglists (quote ([r res]))}, :private true, :name om.next/merge-novelty!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([r res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 843, :end-line 843, :max-fixed-arity 2, :fn-var true, :arglists (quote ([r res]))}, IQuery {:meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 118, :column 14, :end-line 118, :end-column 20, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {query [[this]]}}}, :protocol-symbol true, :name om.next/IQuery, :file "resources/public/js/om/next.cljs", :end-column 20, :column 1, :line 118, :protocol-info {:methods {query [[this]]}}, :info nil, :end-line 118, :impls #{}, :doc nil, :jsdoc ("@interface")}, ref->any-path {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 788, :column 7, :end-line 788, :end-column 20, :arglists (quote ([x ref])), :doc "Get any path from the indexer that matches the given ref. See also\n   om.next/ref->paths."}, :name om.next/ref->any-path, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([x ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 788, :end-line 788, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ref])), :doc "Get any path from the indexer that matches the given ref. See also\n   om.next/ref->paths."}, get-state {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 307, :column 7, :end-line 307, :end-column 16, :arglists (quote ([component] [component k-or-ks])), :doc "Get a component's local state. May provide a single key or a sequential\n   collection of keys for indexed access into the component's local state.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/get-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}, :method-params ([component] [component k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 307, :end-line 307, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component k-or-ks]), :doc "Get a component's local state. May provide a single key or a sequential\n   collection of keys for indexed access into the component's local state."}, *parent* {:name om.next/*parent*, :file "resources/public/js/om/next.cljs", :line 28, :column 1, :end-line 28, :end-column 45, :dynamic true, :private true, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 28, :column 37, :end-line 28, :end-column 45, :dynamic true, :private true}}, update-state! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 321, :column 7, :end-line 321, :end-column 20, :arglists (quote ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest])), :doc "Update a component's local state. Similar to Clojure(Script)'s update-in.", :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil nil)}}, :name om.next/update-state!, :variadic true, :file "resources/public/js/om/next.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil nil)}, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil nil), :column 1, :line 321, :end-line 321, :max-fixed-arity 6, :fn-var true, :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :doc "Update a component's local state. Similar to Clojure(Script)'s update-in."}, Indexer {:num-fields 1, :protocols #{cljs.core/IRecord om.next.protocols/IIndexer cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name om.next/Indexer, :file "resources/public/js/om/next.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 658, :record true, :end-line 658, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, query-zip {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 47, :column 8, :end-line 47, :end-column 17, :private true, :arglists (quote ([root]))}, :private true, :name om.next/query-zip, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([root]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([root]))}, reconciler {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 968, :column 7, :end-line 968, :end-column 17, :arglists (quote ([{:keys [state shared parser indexer ui->props send merge-send merge-tree merge-ref optimize history], :or {ui->props default-ui->props, indexer om.next/indexer, merge-send into, merge-tree merge, merge-ref default-merge-ref, optimize (fn [cs] (sort-by depth cs)), history 100}, :as config}])), :doc "Construct a reconciler from a configuration map, the following options\n   are required:\n\n   :state  - the application state, must be IAtom.\n   :parser - the parser to be used\n   :send   - required only if the parser will return a non-empty value when\n             run in remote mode. send is a function of two arguments, the\n             remote expression and a callback which should be invoked with\n             the resolved expression."}, :name om.next/reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([p__63344]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 968, :end-line 968, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [state shared parser indexer ui->props send merge-send merge-tree merge-ref optimize history], :or {ui->props default-ui->props, indexer om.next/indexer, merge-send into, merge-tree merge, merge-ref default-merge-ref, optimize (fn [cs] (sort-by depth cs)), history 100}, :as config}])), :doc "Construct a reconciler from a configuration map, the following options\n   are required:\n\n   :state  - the application state, must be IAtom.\n   :parser - the parser to be used\n   :send   - required only if the parser will return a non-empty value when\n             run in remote mode. send is a function of two arguments, the\n             remote expression and a callback which should be invoked with\n             the resolved expression."}, *instrument* {:name om.next/*instrument*, :file "resources/public/js/om/next.cljs", :line 30, :column 1, :end-line 30, :end-column 49, :dynamic true, :private true, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 30, :column 37, :end-line 30, :end-column 49, :dynamic true, :private true}}, params {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 112, :column 4, :end-line 112, :end-column 10, :protocol om.next/IQueryParams, :doc "Return the query parameters", :arglists (quote ([this]))}, :protocol om.next/IQueryParams, :name om.next/params, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the query parameters"}, *shared* {:name om.next/*shared*, :file "resources/public/js/om/next.cljs", :line 29, :column 1, :end-line 29, :end-column 45, :dynamic true, :private true, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 29, :column 37, :end-line 29, :end-column 45, :dynamic true, :private true}}, get-indexer {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 750, :column 7, :end-line 750, :end-column 18, :arglists (quote ([reconciler])), :doc "Get the indexer associated with the reconciler."}, :name om.next/get-indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 750, :end-line 750, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc "Get the indexer associated with the reconciler."}, focus->path {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 91, :column 8, :end-line 91, :end-column 19, :private true, :arglists (quote ([focus] [focus path])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([focus] [focus path]), :arglists ([focus] [focus path]), :arglists-meta (nil nil)}}, :private true, :name om.next/focus->path, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([focus] [focus path]), :arglists ([focus] [focus path]), :arglists-meta (nil nil)}, :method-params ([focus] [focus path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 2, :fn-var true, :arglists ([focus] [focus path])}, state-path {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 494, :column 8, :end-line 494, :end-column 18, :private true, :arglists (quote ([indexer c]))}, :private true, :name om.next/state-path, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([indexer c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 494, :end-line 494, :max-fixed-arity 2, :fn-var true, :arglists (quote ([indexer c]))}, bind-query {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 134, :column 8, :end-line 134, :end-column 18, :private true, :arglists (quote ([query params]))}, :private true, :name om.next/bind-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([query params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query params]))}, compute-react-key {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 169, :column 8, :end-line 169, :end-column 25, :private true, :arglists (quote ([cl props]))}, :private true, :name om.next/compute-react-key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([cl props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cl props]))}, set-prop! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 211, :column 8, :end-line 211, :end-column 17, :private true, :arglists (quote ([c k v])), :doc "PRIVATE: Do not use"}, :private true, :name om.next/set-prop!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([c k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 3, :fn-var true, :arglists (quote ([c k v])), :doc "PRIVATE: Do not use"}, *raf* {:name om.next/*raf*, :file "resources/public/js/om/next.cljs", :line 25, :column 1, :end-line 25, :end-column 28, :dynamic true, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 25, :column 23, :end-line 25, :end-column 28, :dynamic true}}, IQueryParams {:meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 111, :column 14, :end-line 111, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {params [[this]]}}}, :protocol-symbol true, :name om.next/IQueryParams, :file "resources/public/js/om/next.cljs", :end-column 26, :column 1, :line 111, :protocol-info {:methods {params [[this]]}}, :info nil, :end-line 111, :impls #{default}, :doc nil, :jsdoc ("@interface")}, state {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 202, :column 8, :end-line 202, :end-column 13, :private true, :arglists (quote ([c]))}, :private true, :name om.next/state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, queue-calls! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 835, :column 8, :end-line 835, :end-column 20, :private true, :arglists (quote ([r res]))}, :private true, :name om.next/queue-calls!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([r res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 835, :end-line 835, :max-fixed-arity 2, :fn-var true, :arglists (quote ([r res]))}, schedule-render! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 507, :column 7, :end-line 507, :end-column 23, :arglists (quote ([reconciler]))}, :name om.next/schedule-render!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 507, :end-line 507, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, react-set-state! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 356, :column 7, :end-line 356, :end-column 23, :arglists (quote ([component new-state] [component new-state cb])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([component new-state] [component new-state cb]), :arglists ([component new-state] [component new-state cb]), :arglists-meta (nil nil)}}, :name om.next/react-set-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([component new-state] [component new-state cb]), :arglists ([component new-state] [component new-state cb]), :arglists-meta (nil nil)}, :method-params ([component new-state] [component new-state cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 356, :end-line 356, :max-fixed-arity 3, :fn-var true, :arglists ([component new-state] [component new-state cb])}, class-path {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 438, :column 8, :end-line 438, :end-column 18, :private true, :arglists (quote ([c]))}, :private true, :name om.next/class-path, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 438, :end-line 438, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, transact! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 594, :column 7, :end-line 594, :end-column 16, :arglists (quote ([x tx] [r ref tx])), :doc "Given a reconciler or component run a transaction. tx is a parse expression\n   that should include mutations followed by any necessary read. The reads will\n   be used to trigger component re-rendering. If given a reconciler can be\n   optionally passed a ref as the second argument.\n\n   Example:\n\n     (om/transact! widget\n       '[(do/this!) (do/that!)\n         :read/this :read/that])", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x tx] [r ref tx]), :arglists ([x tx] [r ref tx]), :arglists-meta (nil nil)}}, :name om.next/transact!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x tx] [r ref tx]), :arglists ([x tx] [r ref tx]), :arglists-meta (nil nil)}, :method-params ([x tx] [r ref tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 594, :end-line 594, :max-fixed-arity 3, :fn-var true, :arglists ([x tx] [r ref tx]), :doc "Given a reconciler or component run a transaction. tx is a parse expression\n   that should include mutations followed by any necessary read. The reads will\n   be used to trigger component re-rendering. If given a reconciler can be\n   optionally passed a ref as the second argument.\n\n   Example:\n\n     (om/transact! widget\n       '[(do/this!) (do/that!)\n         :read/this :read/that])"}, basis-t {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 504, :column 8, :end-line 504, :end-column 15, :private true, :arglists (quote ([reconciler]))}, :private true, :name om.next/basis-t, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 504, :end-line 504, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, state-query {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 467, :column 8, :end-line 467, :end-column 19, :private true, :arglists (quote ([focus data-path]))}, :private true, :name om.next/state-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([focus data-path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 467, :end-line 467, :max-fixed-arity 2, :fn-var true, :arglists (quote ([focus data-path]))}, roots {:name om.next/roots, :file "resources/public/js/om/next.cljs", :line 24, :column 1, :end-line 24, :end-column 21, :private true, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 24, :column 16, :end-line 24, :end-column 21, :private true}}, *depth* {:name om.next/*depth*, :file "resources/public/js/om/next.cljs", :line 31, :column 1, :end-line 31, :end-column 44, :dynamic true, :private true, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 31, :column 37, :end-line 31, :end-column 44, :dynamic true, :private true}}, add-root! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 525, :column 7, :end-line 525, :end-column 16, :arglists (quote ([reconciler root-class target] [reconciler root-class target options])), :doc "Given a a root component class and a target root DOM node, instantiate and\n   render the root class using the reconciler's :state property. The reconciler\n   will continue to observe state changes to the :state and keep the components\n   in sync.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([reconciler root-class target] [reconciler root-class target options]), :arglists ([reconciler root-class target] [reconciler root-class target options]), :arglists-meta (nil nil)}}, :name om.next/add-root!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([reconciler root-class target] [reconciler root-class target options]), :arglists ([reconciler root-class target] [reconciler root-class target options]), :arglists-meta (nil nil)}, :method-params ([reconciler root-class target] [reconciler root-class target options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 525, :end-line 525, :max-fixed-arity 4, :fn-var true, :arglists ([reconciler root-class target] [reconciler root-class target options]), :doc "Given a a root component class and a target root DOM node, instantiate and\n   render the root class using the reconciler's :state property. The reconciler\n   will continue to observe state changes to the :state and keep the components\n   in sync."}, reconciler? {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 1008, :column 16, :end-line 1008, :end-column 27, :tag boolean, :arglists (quote ([x])), :doc "Returns true if x is a reconciler."}, :name om.next/reconciler?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1008, :ret-tag boolean, :end-line 1008, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if x is a reconciler."}, get-query {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 154, :column 7, :end-line 154, :end-column 16, :arglists (quote ([x])), :doc "Return a IQuery/IParams instance bound query. Works for component classes\n   and component instances. See also om.next/full-query."}, :name om.next/get-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Return a IQuery/IParams instance bound query. Works for component classes\n   and component instances. See also om.next/full-query."}, ref->components {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 756, :column 7, :end-line 756, :end-column 22, :arglists (quote ([x ref])), :doc "Return all components for a given ref."}, :name om.next/ref->components, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([x ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 756, :end-line 756, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ref])), :doc "Return all components for a given ref."}, dom-node {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 407, :column 7, :end-line 407, :end-column 15, :arglists (quote ([component] [component name])), :doc "Returns the dom node associated with a component's React ref.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component name]), :arglists ([component] [component name]), :arglists-meta (nil nil)}}, :name om.next/dom-node, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component name]), :arglists ([component] [component name]), :arglists-meta (nil nil)}, :method-params ([component] [component name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 407, :end-line 407, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component name]), :doc "Returns the dom node associated with a component's React ref."}, ->Reconciler {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 859, :column 12, :end-line 859, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([config state]))}, :name om.next/->Reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([config state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 859, :end-line 859, :max-fixed-arity 2, :fn-var true, :arglists (quote ([config state]))}, ref->paths {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 781, :column 7, :end-line 781, :end-column 17, :arglists (quote ([x ref])), :doc "Return all paths for a given ref."}, :name om.next/ref->paths, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([x ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 781, :end-line 781, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ref])), :doc "Return all paths for a given ref."}, Reconciler {:num-fields 2, :protocols #{cljs.core/IRecord om.next.protocols/IReconciler cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name om.next/Reconciler, :file "resources/public/js/om/next.cljs", :end-column 22, :type true, :column 12, :internal-ctor true, :line 859, :record true, :end-line 859, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, transact* {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 568, :column 7, :end-line 568, :end-column 16, :arglists (quote ([r c ref tx]))}, :name om.next/transact*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([r c ref tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 568, :end-line 568, :max-fixed-arity 4, :fn-var true, :arglists (quote ([r c ref tx]))}, dispatch {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 646, :column 7, :end-line 646, :end-column 15, :arglists (quote ([_ key _])), :doc "Helper function for implementing :read and :mutate as multimethods. Use this\n   as the dispatch-fn."}, :name om.next/dispatch, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([_ key _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 646, :end-line 646, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ key _])), :doc "Helper function for implementing :read and :mutate as multimethods. Use this\n   as the dispatch-fn."}, -get-state {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 123, :column 4, :end-line 123, :end-column 14, :protocol om.next/ILocalState, :doc "Get the component's local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-get-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 123, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's local state"}, join? {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 654, :column 8, :end-line 654, :end-column 13, :private true, :arglists (quote ([x]))}, :private true, :name om.next/join?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 654, :end-line 654, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, factory {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 176, :column 7, :end-line 176, :end-column 14, :arglists (quote ([class])), :doc "Create a factory constructor from a component class created with\n   om.next/defui."}, :name om.next/factory, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 1, :fn-var true, :arglists (quote ([class])), :doc "Create a factory constructor from a component class created with\n   om.next/defui."}, -get-rendered-state {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 124, :column 4, :end-line 124, :end-column 23, :protocol om.next/ILocalState, :doc "Get the component's rendered local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-get-rendered-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's rendered local state"}, parser {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 639, :column 7, :end-line 639, :end-column 13, :arglists (quote ([{:keys [read mutate], :as opts}])), :doc "Create a parser. The argument is a map of two keys, :read and :mutate. Both\n   functions should have the signature (Env -> Key -> Params -> ParseResult)."}, :name om.next/parser, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([p__63151]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 639, :end-line 639, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [read mutate], :as opts}])), :doc "Create a parser. The argument is a map of two keys, :read and :mutate. Both\n   functions should have the signature (Env -> Key -> Params -> ParseResult)."}, merge-pending-state! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 346, :column 8, :end-line 346, :end-column 28, :private true, :arglists (quote ([c]))}, :private true, :name om.next/merge-pending-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 28, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 346, :end-line 346, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, state-path* {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 481, :column 8, :end-line 481, :end-column 19, :private true, :arglists (quote ([focus data-path]))}, :private true, :name om.next/state-path*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([focus data-path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 481, :end-line 481, :max-fixed-arity 2, :fn-var true, :arglists (quote ([focus data-path]))}, nil-or-map? {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 36, :column 16, :end-line 36, :end-column 27, :tag boolean, :arglists (quote ([x]))}, :name om.next/nil-or-map?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :ret-tag boolean, :end-line 36, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x]))}, *logger* {:name om.next/*logger*, :file "resources/public/js/om/next.cljs", :line 16, :column 1, :end-line 16, :end-column 18, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 16, :column 10, :end-line 16, :end-column 18}}, sift-refs {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 828, :column 8, :end-line 828, :end-column 17, :private true, :arglists (quote ([res]))}, :private true, :name om.next/sift-refs, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 828, :end-line 828, :max-fixed-arity 1, :fn-var true, :arglists (quote ([res]))}, indexer {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 735, :column 7, :end-line 735, :end-column 14, :arglists (quote ([])), :doc "Given a function (Component -> Ref), return an indexer."}, :name om.next/indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 735, :end-line 735, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Given a function (Component -> Ref), return an indexer."}, component? {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 197, :column 16, :end-line 197, :end-column 26, :tag boolean, :arglists (quote ([x])), :doc "Returns true if the argument is an Om component."}, :name om.next/component?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 26, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :ret-tag boolean, :end-line 197, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if the argument is an Om component."}, set-params! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 383, :column 7, :end-line 383, :end-column 18, :arglists (quote ([component new-params])), :doc "Change the query parameters of a component. Will schedule a re-render."}, :name om.next/set-params!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([component new-params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 383, :end-line 383, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component new-params])), :doc "Change the query parameters of a component. Will schedule a re-render."}, remove-root! {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 539, :column 7, :end-line 539, :end-column 19, :arglists (quote ([reconciler target])), :doc "Remove a root target (a DOM elment) from a reconciler. The reconciler will no\n   longer attempt to reconcile application state with the specified root."}, :name om.next/remove-root!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([reconciler target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 539, :end-line 539, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler target])), :doc "Remove a root target (a DOM elment) from a reconciler. The reconciler will no\n   longer attempt to reconcile application state with the specified root."}, ident {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 105, :column 4, :end-line 105, :end-column 9, :protocol om.next/Ident, :doc "Return the ref for this component", :arglists (quote ([this]))}, :protocol om.next/Ident, :name om.next/ident, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the ref for this component"}, react-ref {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 414, :column 7, :end-line 414, :end-column 16, :arglists (quote ([component name])), :doc "Returns the component associated with a component's React ref."}, :name om.next/react-ref, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([component name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 414, :end-line 414, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component name])), :doc "Returns the component associated with a component's React ref."}, root-class {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 233, :column 8, :end-line 233, :end-column 18, :private true, :arglists (quote ([component]))}, :private true, :name om.next/root-class, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 233, :end-line 233, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, get-reconciler {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 216, :column 8, :end-line 216, :end-column 22, :private true, :arglists (quote ([c]))}, :private true, :name om.next/get-reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, map->Indexer {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 658, :column 12, :end-line 658, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__63161]))}, :name om.next/map->Indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([G__63161]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 658, :end-line 658, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__63161]))}, shared {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 264, :column 7, :end-line 264, :end-column 13, :arglists (quote ([component]))}, :name om.next/shared, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, depth {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 242, :column 8, :end-line 242, :end-column 13, :private true, :arglists (quote ([component])), :doc "PRIVATE: Returns the render depth (a integer) of the component relative to\n  the mount root."}, :private true, :name om.next/depth, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 242, :end-line 242, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "PRIVATE: Returns the render depth (a integer) of the component relative to\n  the mount root."}, ref? {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 550, :column 16, :end-line 550, :end-column 20, :tag boolean, :arglists (quote ([x]))}, :name om.next/ref?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 550, :ret-tag boolean, :end-line 550, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x]))}, ILocalState {:meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 121, :column 14, :end-line 121, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-set-state! [[this new-state]], -get-state [[this]], -get-rendered-state [[this]], -merge-pending-state! [[this]]}}}, :protocol-symbol true, :name om.next/ILocalState, :file "resources/public/js/om/next.cljs", :end-column 25, :column 1, :line 121, :protocol-info {:methods {-set-state! [[this new-state]], -get-state [[this]], -get-rendered-state [[this]], -merge-pending-state! [[this]]}}, :info nil, :end-line 121, :impls #{}, :doc nil, :jsdoc ("@interface")}, full-query {:protocol-inline nil, :meta {:file "/Users/christophermcdevitt/code/scratch/om-next-tut/resources/public/js/om/next.cljs", :line 802, :column 7, :end-line 802, :end-column 17, :arglists (quote ([component])), :doc "Returns the absolute query for a given component, not relative like\n   om.next/get-query."}, :name om.next/full-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 802, :end-line 802, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the absolute query for a given component, not relative like\n   om.next/get-query."}}, :require-macros {om.next om.next}, :cljs.analyzer/constants {:seen #{indexes target fn? vector? :react-key :read :index :om.next/queries reads :else :ref :config :queue param-map * :ui->ref map? :send-queued :reconciler :params :history :om/reconciler :merge-ref :state :prop->classes :class->paths :roots :component config :ref->components :queued :class->components name reconciler gdom/isElement :parser :ui->props :root :id state component :indexer reconciler? :send :om.next/not-found :shared :queued-send :merge-tree :optimize c :t tx :indexes :query class nil-or-map? :om-index opts :class-path->query component? root-class :merge-send :mutate focus symbol? f}, :order [:else vector? focus :config :state :om.next/queries :query :params :component :react-key :om-index fn? class component? c component :history f * :index :indexes :class-path->query reconciler? reconciler root-class gdom/isElement target :shared :indexer :parser :ui->ref :reconciler :ref tx symbol? name nil-or-map? param-map reads :read :mutate map? opts :prop->classes :class->paths :class->components :ref->components :om.next/not-found indexes :merge-ref :merge-tree :send-queued :t :queue :queued-send :send :roots :ui->props :optimize :queued :merge-send config state :root :id :om/reconciler]}, :doc nil}